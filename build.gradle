plugins {
    id("java")
    id("maven-publish")
}

group = "fr.traqueur"
version = property("version")

repositories {
    mavenCentral()
    maven {
        url = "https://jitpack.io"
        name = "jitpack"
    }
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        name = "spigot-repo"
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT'

    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'com.github.PlayerNguyen:OptEco:2.1.4b'

    compileOnly files('libs/bt-api-3.14.6.jar')
    compileOnly files('libs/MySQLTokens.jar')
    compileOnly files('libs/PlayerPoints-3.2.7.jar')
    compileOnly files('libs/TokenAPI.jar')
    compileOnly files('libs/GemAPI.jar')
    compileOnly files('libs/zEssentialsAPI.jar')
    compileOnly 'com.github.Maxlego08:zMenu-API:303d4e9178'
    compileOnly 'com.willfp:EcoBits:1.8.4'

}
def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.register('generateVersionProperties') {
    doLast {
        def file = new File("$projectDir/src/main/resources/${project.name.toLowerCase()}.properties")
        if (!file.parentFile.exists()) {
            file.parentFile.mkdirs()
        }
        file.text = "version=${project.version}"
    }
}

build.dependsOn generateVersionProperties

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

